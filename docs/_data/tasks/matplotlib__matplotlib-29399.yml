id: matplotlib__matplotlib-29399
status:
  human: APPROVED
  llm: COMING_SOON
comparison:
  llm_better: COMING_SOON
repo:
  org: matplotlib
  name: matplotlib
  url: https://github.com/matplotlib/matplotlib
  pull_request: https://github.com/matplotlib/matplotlib/pull/29399
  base_commit: 8d3c4db01c59592fa612b093beb9e3e5ad959191
  created_at: '2025-01-04 1:14:44'
  version: '3.1'
workload:
  language: python
  code: "import timeit\nimport statistics\n\nimport matplotlib.pyplot as plt\nimport\
    \ numpy as np\n\nx = y = np.linspace(-1, 1, 8000)\nX, Y = np.meshgrid(x, y)\n\
    Z = X ** 2 + Y ** 2\n\ndef setup():\n    global fig, ax\n    plt.clf()\n    fig\
    \ = plt.figure()\n    ax = fig.add_subplot(111, projection='3d')\n\ndef workload():\n\
    \    global fig, ax\n    ax.plot_wireframe(X, Y, Z, axlim_clip=False)\n    ax.set_xlim(0,\
    \ 1)\n    fig.canvas.draw()\n\nruntimes = timeit.repeat(workload, number=1, repeat=10,\
    \ setup=setup)\n\nprint(\"Mean:\", statistics.mean(runtimes))\nprint(\"Std Dev:\"\
    , statistics.stdev(runtimes))"
docker:
  base_image: docker.io/sweperf/sweperf:matplotlib__matplotlib-29399
  human_image: docker.io/sweperf/sweperf_annotate:matplotlib__matplotlib-29399
  llm_image: PLACEHOLDER
  commands:
    run_base: docker run --rm --name bench_{id}_base --mount type=bind,src=<WORKLOAD_PY>,dst=/tmp/workload.py
      {base_image} /bin/bash -lc 'python /tmp/workload.py' 2>&1
    run_human: docker run --rm --name bench_{id}_human --mount type=bind,src=<WORKLOAD_PY>,dst=/tmp/workload.py
      {human_image} /bin/bash -lc 'chmod +x /perf.sh && /perf.sh && python /tmp/workload.py'
      2>&1
    run_llm: echo 'LLM image not available yet for {id}. Please fill docker.llm_image.'
metrics:
  reducer: mean_std
  parse_regex:
    mean: (?i)\bMean:\s*([0-9.]+)
    std: (?i)(Std Dev|SD):\s*([0-9.]+)
notes:
  user_notes: 'Before Mean: 3.5698751507035924

    Before SD: 0.016124886041287194

    After Mean: 2.5027704568987246

    After SD: 0.014801222650604823

    Improvement: -29.89%'
  mike_notes: ''
meta:
  num_covering_tests: '104'
