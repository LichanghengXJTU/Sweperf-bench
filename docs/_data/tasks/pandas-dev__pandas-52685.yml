id: pandas-dev__pandas-52685
status:
  human: APPROVED
  llm: COMING_SOON
comparison:
  llm_better: COMING_SOON
repo:
  org: pandas-dev
  name: pandas
  url: https://github.com/pandas-dev/pandas
  pull_request: https://github.com/pandas-dev/pandas/pull/52685
  base_commit: 9eee1073c2d0602569ca445b7509dedf906f4af5
  created_at: '2023-04-15 19:04:29'
  version: '2'
workload:
  language: python
  code: "import timeit\nimport statistics\n\nimport numpy as np\nimport pandas as\
    \ pd\n\nnum_rows = 100\nnum_cols = 50_000\nnum_dfs = 7\n\ndef generate_dataframes(num_dfs,\
    \ num_rows, num_cols, all_cols, dtype):\n    df_list = []\n    for i in range(num_dfs):\n\
    \        index = ['i%d'%i for i in range(i*num_rows, (i+1)*num_rows)]\n      \
    \  columns = np.random.choice(all_cols, num_cols, replace=False)\n        values\
    \ = np.random.uniform(-100, 100, [num_rows, num_cols])\n        df_list.append(pd.DataFrame(values,\
    \ index=index, columns=columns, dtype=dtype))\n    return df_list\n\nnum_all_cols\
    \ = num_cols * num_dfs * 4 // 5\nall_cols = ['c%i'%i for i in range(num_all_cols)]\n\
    df_list_float32 = generate_dataframes(num_dfs, num_rows, num_cols, all_cols, 'float32')\n\
    df_list_float64 = generate_dataframes(num_dfs, num_rows, num_cols, all_cols, 'float64')\n\
    \ndef workload():\n    pd.concat(df_list_float32)\n    pd.concat(df_list_float64)\n\
    \    \nruntimes = timeit.repeat(workload, number=1, repeat=3)\n\n# Print runtime\
    \ mean and std deviation.\nprint(\"Mean:\", statistics.mean(runtimes))\nprint(\"\
    Std Dev:\", statistics.stdev(runtimes))\n"
docker:
  base_image: docker.io/sweperf/sweperf:pandas-dev__pandas-52685
  human_image: docker.io/sweperf/sweperf_annotate:pandas-dev__pandas-52685
  llm_image: PLACEHOLDER
  commands:
    run_base: docker run --rm --name bench_{id}_base --mount type=bind,src=<WORKLOAD_PY>,dst=/tmp/workload.py
      {base_image} /bin/bash -lc 'python /tmp/workload.py' 2>&1
    run_human: docker run --rm --platform linux/amd64 --name bench_{id}_human --mount
      type=bind,src=<WORKLOAD_PY>,dst=/tmp/workload.py {human_image} /bin/bash -lc
      'chmod +x /perf.sh && git apply /tmp/patch.diff && /perf.sh' 2>&1
    run_llm: echo 'LLM image not available yet for {id}. Please fill docker.llm_image.'
metrics:
  reducer: mean_std
  parse_regex:
    mean: (?i)\bMean:\s*([0-9.]+)
    std: (?i)(Std Dev|SD):\s*([0-9.]+)
notes:
  user_notes: 'Before Mean: 24.704105068417267

    Before SD: 0.2923067799915068

    After Mean: 1.4699527104035952

    After SD: 0.024562768553883094

    Improvement: -94.05%'
  mike_notes: ''
meta:
  num_covering_tests: '148'
