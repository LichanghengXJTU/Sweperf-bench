id: pydata__xarray-5661
status:
  human: APPROVED
  llm: COMING_SOON
comparison:
  llm_better: COMING_SOON
repo:
  org: pydata
  name: xarray
  url: https://github.com/pydata/xarray
  pull_request: https://github.com/pydata/xarray/pull/5661
  base_commit: c44b816bf4a858af1bb621d96e1d3482db3976da
  created_at: '2021-08-01 8:44:17'
  version: '0.19'
workload:
  language: python
  code: "import timeit\nimport statistics\n\nimport numpy as np\nimport xarray as\
    \ xr\nimport sys\nimport os\n\n# silence command-line output temporarily\nsys.stdout,\
    \ sys.stderr = os.devnull, os.devnull\n\ndef setup():\n    global ds0\n    \n\
    \    a = np.arange(0, 2000)\n    data_vars = dict()\n    for i in a:\n       \
    \ data_vars[f\"long_variable_name_{i}\"] = xr.DataArray(\n            name=f\"\
    long_variable_name_{i}\",\n            data=np.arange(0, 20),\n            dims=[f\"\
    long_coord_name_{i}_x\"],\n            coords={f\"long_coord_name_{i}_x\": np.arange(0,\
    \ 20) * 2},\n        )\n    ds0 = xr.Dataset(data_vars)\n    ds0.attrs = {f\"\
    attr_{k}\": 2 for k in a}\n\ndef workload():\n    global ds0\n    print(ds0)\n\
    \    \n# unsilence command-line output\nsys.stdout, sys.stderr = sys.__stdout__,\
    \ sys.__stderr__\n\nruntimes = timeit.repeat(workload, number=1, repeat=10, setup=setup)\n\
    \n# Print runtime mean and std deviation.\nprint(\"Mean:\", statistics.mean(runtimes))\n\
    print(\"Std Dev:\", statistics.stdev(runtimes))\n "
docker:
  base_image: docker.io/sweperf/sweperf:pydata__xarray-5661
  human_image: docker.io/sweperf/sweperf_annotate:pydata__xarray-5661
  llm_image: PLACEHOLDER
  commands:
    run_base: docker run --rm --name bench_{id}_base --mount type=bind,src=<WORKLOAD_PY>,dst=/tmp/workload.py
      {base_image} /bin/bash -lc 'python /tmp/workload.py' 2>&1
    run_human: docker run --rm --name bench_{id}_human --mount type=bind,src=<WORKLOAD_PY>,dst=/tmp/workload.py
      {human_image} /bin/bash -lc 'chmod +x /perf.sh && /perf.sh && python /tmp/workload.py'
      2>&1
    run_llm: echo 'LLM image not available yet for {id}. Please fill docker.llm_image.'
metrics:
  reducer: mean_std
  parse_regex:
    mean: (?i)\bMean:\s*([0-9.]+)
    std: (?i)(Std Dev|SD):\s*([0-9.]+)
notes:
  user_notes: 'Before Mean: 4.677181837201351

    Before SD: 0.034818625325130935

    After Mean: 0.04982840229058638

    After SD: 0.0004992342610722498

    Improvement: -98.93%'
  mike_notes: ''
meta:
  num_covering_tests: '6'
