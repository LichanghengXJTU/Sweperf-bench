id: pandas-dev__pandas-42714
status:
  human: APPROVED
  llm: COMING_SOON
comparison:
  llm_better: COMING_SOON
repo:
  org: pandas-dev
  name: pandas
  url: https://github.com/pandas-dev/pandas
  pull_request: https://github.com/pandas-dev/pandas/pull/42714
  base_commit: daec2e73b48fe34086dcdeeb0858d29536b6ca6a
  created_at: '2021-07-25 19:08:47'
  version: '1.3'
workload:
  language: python
  code: "import timeit\nimport statistics\n\nimport itertools\nimport pandas as pd\n\
    import numpy as np\n\nN = 10 ** 7\n\ndtypes = [\"Int64\", \"Float64\"]\nmax_number\
    \ = [5, 1000]\nseries_types = [\"random_hits\", \"random_misses\", \"monotone_hits\"\
    , \"monotone_misses\"]\n\n\nsv_pairs = []\n\nfor dtype, max_num, series_type in\
    \ itertools.product(dtypes, max_number, series_types):\n    if series_type ==\
    \ \"random_hits\":\n        array = np.random.randint(0, max_num, N)\n    if series_type\
    \ == \"random_misses\":\n        array = np.random.randint(0, max_num, N) + max_num\n\
    \    if series_type == \"monotone_hits\":\n        array = np.repeat(np.arange(max_num),\
    \ N // max_num)\n    if series_type == \"monotone_misses\":\n        array = np.arange(N)\
    \ + max_num\n\n    sv_pairs.append(\n        (pd.Series(array).astype(dtype),\
    \ np.arange(max_num).astype(dtype.lower()))\n    )\n\ndef workload():\n    for\
    \ series, values in sv_pairs:\n        series.isin(values)\n\nruntimes = timeit.repeat(workload,\
    \ number=1, repeat=25)\n\n# Print runtime mean and std deviation.\nprint(\"Mean:\"\
    , statistics.mean(runtimes))\nprint(\"Std Dev:\", statistics.stdev(runtimes))"
docker:
  base_image: docker.io/sweperf/sweperf:pandas-dev__pandas-42714
  human_image: docker.io/sweperf/sweperf_annotate:pandas-dev__pandas-42714
  llm_image: PLACEHOLDER
  commands:
    run_base: docker run --rm --name bench_{id}_base --mount type=bind,src=<WORKLOAD_PY>,dst=/tmp/workload.py
      {base_image} /bin/bash -lc 'python /tmp/workload.py' 2>&1
    run_human: docker run --rm --platform linux/amd64 --name bench_{id}_human --mount
      type=bind,src=<WORKLOAD_PY>,dst=/tmp/workload.py {human_image} /bin/bash -lc
      'chmod +x /perf.sh && git apply -q /tmp/patch.diff && /perf.sh' 2>&1
    run_llm: echo 'LLM image not available yet for {id}. Please fill docker.llm_image.'
metrics:
  reducer: mean_std
  parse_regex:
    mean: (?i)\bMean:\s*([0-9.]+)
    std: (?i)(Std Dev|SD):\s*([0-9.]+)
notes:
  user_notes: 'Before Mean: 5.000184761602432

    Before SD: 0.01967770078874298

    After Mean: 1.216502236004453

    After SD: 0.00414671997599092

    Improvement: -75.67%'
  mike_notes: ''
meta:
  num_covering_tests: '1'
