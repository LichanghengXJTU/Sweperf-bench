id: pandas-dev__pandas-51784
status:
  human: APPROVED
  llm: COMING_SOON
comparison:
  llm_better: COMING_SOON
repo:
  org: pandas-dev
  name: pandas
  url: https://github.com/pandas-dev/pandas
  pull_request: https://github.com/pandas-dev/pandas/pull/51784
  base_commit: 1f7a7f20b1a3aeb66527df0d9a3682159e56917e
  created_at: '2023-03-04 13:23:42'
  version: '1.5'
workload:
  language: python
  code: "import timeit\nimport statistics\n\nimport pandas as pd\nimport numpy as\
    \ np\nfrom time import time\n\nimport string\nimport random\n\nrows = 500000\n\
    temp = np.random.randint(10**6, size=(rows, 3))\nsymbols = string.ascii_uppercase\
    \ + string.digits\nstring_col = [''.join(random.choices(symbols, k=16)) for _\
    \ in range(rows)]\nres = np.concatenate((temp, np.array([string_col]).T), axis=1)\n\
    \ndf = pd.DataFrame(res)\n\ndef _format(x):\n    vals = x.values\n    if len(vals)\
    \ > 2:\n        return '-'.join(map(str, vals[:-1]))\n    return np.nan\n\ngb\
    \ = df.groupby(3, sort=False)\nfunc = {\"col1\": (2, _format), \"col2\": (1, _format)}\n\
    \ndef workload():\n   gb.agg(**func)\n   \nruntimes = timeit.repeat(workload,\
    \ number=1, repeat=5)\n\n# Print runtime mean and std deviation.\nprint(\"Mean:\"\
    , statistics.mean(runtimes))\nprint(\"Std Dev:\", statistics.stdev(runtimes))\n\
    \n"
docker:
  base_image: docker.io/sweperf/sweperf:pandas-dev__pandas-51784
  human_image: docker.io/sweperf/sweperf_annotate:pandas-dev__pandas-51784
  llm_image: PLACEHOLDER
  commands:
    run_base: docker run --rm --name bench_{id}_base --mount type=bind,src=<WORKLOAD_PY>,dst=/tmp/workload.py
      {base_image} /bin/bash -lc 'python /tmp/workload.py' 2>&1
    run_human: docker run --rm --name bench_{id}_human --mount type=bind,src=<WORKLOAD_PY>,dst=/tmp/workload.py
      {human_image} /bin/bash -lc 'chmod +x /perf.sh && /perf.sh && python /tmp/workload.py'
      2>&1
    run_llm: echo 'LLM image not available yet for {id}. Please fill docker.llm_image.'
metrics:
  reducer: mean_std
  parse_regex:
    mean: (?i)\bMean:\s*([0-9.]+)
    std: (?i)(Std Dev|SD):\s*([0-9.]+)
notes:
  user_notes: 'Before Mean: 9.830007454985752

    Before SD: 0.04731529399706945

    After Mean: 8.990286970406306

    After SD: 0.040593561004120024

    Improvement: -8.54%'
  mike_notes: ''
meta:
  num_covering_tests: '914'
