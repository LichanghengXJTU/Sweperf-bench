id: pandas-dev__pandas-42631
status:
  human: APPROVED
  llm: COMING_SOON
comparison:
  llm_better: COMING_SOON
repo:
  org: pandas-dev
  name: pandas
  url: https://github.com/pandas-dev/pandas
  pull_request: https://github.com/pandas-dev/pandas/pull/42631
  base_commit: 17f6cbb815c525f9655ce12d44ebf6fb73be0d73
  created_at: '2021-07-20 16:26:31'
  version: '1.3'
workload:
  language: python
  code: "import timeit\nimport statistics\n\nimport pandas as pd\nimport numpy as\
    \ np\n\nN_rows = 1000\nN_cols = 1000\nfloat_arrays = [np.random.randn(N_rows)\
    \ for _ in range(N_cols)]\nsparse_arrays = [\n    pd.arrays.SparseArray(np.random.randint(0,\
    \ 2, N_rows), dtype=\"float64\")\n    for _ in range(N_cols)\n]\nint_arrays =\
    \ [\n    pd.array(np.random.randint(1000, size=N_rows), dtype=\"Int64\")\n   \
    \ for _ in range(N_cols)\n]\nindex = pd.Index(range(N_rows))\ncolumns = pd.Index(range(N_cols))\n\
    \ndef workload():\n    pd.DataFrame._from_arrays(\n        int_arrays,\n     \
    \   index=index,\n        columns=columns,\n        verify_integrity=False,\n\
    \    )\n    \nruntimes = timeit.repeat(workload, number=5, repeat=1000)\n\n# Print\
    \ runtime mean and std deviation.\nprint(\"Mean:\", statistics.mean(runtimes))\n\
    print(\"Std Dev:\", statistics.stdev(runtimes))\n    "
docker:
  base_image: docker.io/sweperf/sweperf:pandas-dev__pandas-42631
  human_image: docker.io/sweperf/sweperf_annotate:pandas-dev__pandas-42631
  llm_image: PLACEHOLDER
  commands:
    run_base: docker run --rm --name bench_{id}_base --mount type=bind,src=<WORKLOAD_PY>,dst=/tmp/workload.py
      {base_image} /bin/bash -lc 'python /tmp/workload.py' 2>&1
    run_human: docker run --rm --platform linux/amd64 --name bench_{id}_human --mount
      type=bind,src=<WORKLOAD_PY>,dst=/tmp/workload.py {human_image} /bin/bash -lc
      'chmod +x /perf.sh && git apply /tmp/patch.diff && /perf.sh' 2>&1
    run_llm: echo 'LLM image not available yet for {id}. Please fill docker.llm_image.'
metrics:
  reducer: mean_std
  parse_regex:
    mean: (?i)\bMean:\s*([0-9.]+)
    std: (?i)(Std Dev|SD):\s*([0-9.]+)
notes:
  user_notes: 'Before Mean: 0.02099350629298715

    Before SD: 0.00023216448615400955

    After Mean: 0.010584020258218516

    After SD: 0.00020036988188076063

    Improvement: -49.58%'
  mike_notes: ''
meta:
  num_covering_tests: '853'
