id: scikit-learn__scikit-learn-14075
status:
  human: APPROVED
  llm: COMING_SOON
comparison:
  llm_better: COMING_SOON
repo:
  org: scikit-learn
  name: scikit-learn
  url: https://github.com/scikit-learn/scikit-learn
  pull_request: https://github.com/scikit-learn/scikit-learn/pull/14075
  base_commit: 19479d7af1711f1bb403eca1c02eebf212999091
  created_at: '2019-06-12 15:01:29'
  version: '0.23'
workload:
  language: python
  code: "import timeit\nimport statistics\nimport numpy as np\n\nfrom sklearn.datasets\
    \ import fetch_openml\nfrom sklearn.neural_network import MLPClassifier\nfrom\
    \ sklearn.metrics import zero_one_loss\nfrom sklearn.model_selection import train_test_split\n\
    \n# Setup: load and prepare MNIST data\nprint(\"Loading and preparing dataset...\"\
    )\ndata = fetch_openml(\"mnist_784\", version=1, as_frame=False)\nX = data[\"\
    data\"] / 255.0  # normalize to [0,1]\ny = data[\"target\"]\n\n# Train/test split\n\
    X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=60000, test_size=10000,\
    \ stratify=y, random_state=0)\n\ndef setup():\n    global clf\n    clf = MLPClassifier(\n\
    \        hidden_layer_sizes=(100, 100),\n        max_iter=50,\n        alpha=1e-4,\n\
    \        solver=\"sgd\",\n        learning_rate_init=0.2,\n        momentum=0.9,\n\
    \        verbose=1,\n        tol=1e-4,\n        random_state=1,\n    )\n\ndef\
    \ workload():\n    clf.fit(X_train, y_train)\n\n# Benchmark workload\nruntimes\
    \ = timeit.repeat(workload, number=1, repeat=5, setup=setup)\n\n# Print runtime\
    \ mean and std deviation.\nprint(\"Mean:\", statistics.mean(runtimes))\nprint(\"\
    Std Dev:\", statistics.stdev(runtimes))\n"
docker:
  base_image: docker.io/sweperf/sweperf:scikit-learn__scikit-learn-14075
  human_image: docker.io/sweperf/sweperf_annotate:scikit-learn__scikit-learn-14075
  llm_image: PLACEHOLDER
  commands:
    run_base: docker run --rm --name bench_{id}_base --mount type=bind,src=<WORKLOAD_PY>,dst=/tmp/workload.py
      {base_image} /bin/bash -lc 'python /tmp/workload.py' 2>&1
    run_human: docker run --rm --name bench_{id}_human --mount type=bind,src=<WORKLOAD_PY>,dst=/tmp/workload.py
      {human_image} /bin/bash -lc 'chmod +x /perf.sh && /perf.sh && python /tmp/workload.py'
      2>&1
    run_llm: echo 'LLM image not available yet for {id}. Please fill docker.llm_image.'
metrics:
  reducer: mean_std
  parse_regex:
    mean: (?i)\bMean:\s*([0-9.]+)
    std: (?i)(Std Dev|SD):\s*([0-9.]+)
notes:
  user_notes: 'Before Mean: 56.00598120099166

    Before SD: 0.985512804424882

    After Mean: 55.55707084080204

    After SD: 5.6243893566112435

    Improvement: -0.80%'
  mike_notes: ''
meta:
  num_covering_tests: '2'
