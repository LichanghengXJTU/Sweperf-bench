id: numpy__numpy-24663
status:
  human: APPROVED
  llm: COMING_SOON
comparison:
  llm_better: COMING_SOON
repo:
  org: numpy
  name: numpy
  url: https://github.com/numpy/numpy
  pull_request: https://github.com/numpy/numpy/pull/24663
  base_commit: cdfbdf428d9df9c7119cecae323512a4cd3f57b7
  created_at: '2023-09-07 13:32:17'
  version: '1.26'
workload:
  language: python
  code: "import timeit\nimport statistics\n\nimport numpy as np\n\nbase = np.random.randint(1,\
    \ 100, (10000, 10000), dtype='int64')\na = base.copy()\na1 = base.copy()\n\nb\
    \ = base.copy().astype('float')\nb[b == 50] = np.nan\n\nb1 = b.copy()\n\ndata\
    \ = {'a': a, 'b': b, 'a1': a1, 'b1': b1}\n\ndef workload():\n    for (x, y) in\
    \ [('a','a'),('a','a1'),('b','b'),('b','b1')]:\n        ax = data[x]\n       \
    \ bx = data[y]\n        res = np.array_equal(ax, bx, equal_nan=True)\n\nruntimes\
    \ = timeit.repeat(workload, number=1, repeat=10)\n\nprint(\"Mean:\", statistics.mean(runtimes))\n\
    print(\"Std Dev:\", statistics.stdev(runtimes))"
docker:
  base_image: docker.io/sweperf/sweperf:numpy__numpy-24663
  human_image: docker.io/sweperf/sweperf_annotate:numpy__numpy-24663
  llm_image: PLACEHOLDER
  commands:
    run_base: docker run --rm --name bench_{id}_base --mount type=bind,src=<WORKLOAD_PY>,dst=/tmp/workload.py
      {base_image} /bin/bash -lc 'python /tmp/workload.py' 2>&1
    run_human: docker run --rm --name bench_{id}_human --mount type=bind,src=<WORKLOAD_PY>,dst=/tmp/workload.py
      {human_image} /bin/bash -lc 'chmod +x /perf.sh && /perf.sh && python /tmp/workload.py'
      2>&1
    run_llm: echo 'LLM image not available yet for {id}. Please fill docker.llm_image.'
metrics:
  reducer: mean_std
  parse_regex:
    mean: (?i)\bMean:\s*([0-9.]+)
    std: (?i)(Std Dev|SD):\s*([0-9.]+)
notes:
  user_notes: 'Before Mean: 3.4271488066005986

    Before SD: 0.05401126363477122

    After Mean: 1.021134611297748

    After SD: 0.002999145821551316

    Improvement: -70.20%'
  mike_notes: ''
meta:
  num_covering_tests: '204'
