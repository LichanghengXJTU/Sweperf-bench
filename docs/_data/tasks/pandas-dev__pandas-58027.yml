id: pandas-dev__pandas-58027
status:
  human: APPROVED
  llm: COMING_SOON
comparison:
  llm_better: COMING_SOON
repo:
  org: pandas-dev
  name: pandas
  url: https://github.com/pandas-dev/pandas
  pull_request: https://github.com/pandas-dev/pandas/pull/58027
  base_commit: b552dc95c9fa50e9ca2a0c9f9cdb8757f794fedb
  created_at: '2024-03-27 3:43:05'
  version: '2.2'
workload:
  language: python
  code: "import timeit\nimport statistics\n\nimport pandas as pd\nimport numpy as\
    \ np\n\ndfs = []\n\nfor dtype in [\"datetime64[ns, US/Pacific]\", \"Period[s]\"\
    ]:\n    lev = pd.Index(list(\"ABCDEFGHIJ\"))\n    ri = pd.Index(range(1000))\n\
    \    mi = pd.MultiIndex.from_product([lev, ri], names=[\"foo\", \"bar\"])\n\n\
    \    index = pd.date_range(\"2016-01-01\", periods=10000, freq=\"s\", tz=\"US/Pacific\"\
    )\n    if dtype == \"Period[s]\":\n        index = index.tz_localize(None).to_period(\"\
    s\")\n\n    ser = pd.Series(index, index=mi)\n    df = ser.unstack(\"bar\")\n\
    \    dfs.append(df)\n\nfor dtype in [\"Int64\", \"Float64\"]:\n    lev = pd.Index(list(\"\
    ABCDEFGHIJ\"))\n    ri = pd.Index(range(1000))\n    mi = pd.MultiIndex.from_product([lev,\
    \ ri], names=[\"foo\", \"bar\"])\n\n    values = np.random.randn(10_000).astype(int)\n\
    \n    ser = pd.Series(values, dtype=dtype, index=mi)\n    df = ser.unstack(\"\
    bar\")\n    dfs.append(df)\n    \ndef workload():\n    for df in dfs:\n      \
    \  df.stack()\n\nruntimes = timeit.repeat(workload, number=5, repeat=25)\n\n#\
    \ Print runtime mean and std deviation.\nprint(\"Mean:\", statistics.mean(runtimes))\n\
    print(\"Std Dev:\", statistics.stdev(runtimes))\n"
docker:
  base_image: docker.io/sweperf/sweperf:pandas-dev__pandas-58027
  human_image: docker.io/sweperf/sweperf_annotate:pandas-dev__pandas-58027
  llm_image: PLACEHOLDER
  commands:
    run_base: docker run --rm --name bench_{id}_base --mount type=bind,src=<WORKLOAD_PY>,dst=/tmp/workload.py
      {base_image} /bin/bash -lc 'python /tmp/workload.py' 2>&1
    run_human: docker run --rm --name bench_{id}_human --mount type=bind,src=<WORKLOAD_PY>,dst=/tmp/workload.py
      {human_image} /bin/bash -lc 'chmod +x /perf.sh && /perf.sh && python /tmp/workload.py'
      2>&1
    run_llm: echo 'LLM image not available yet for {id}. Please fill docker.llm_image.'
metrics:
  reducer: mean_std
  parse_regex:
    mean: (?i)\bMean:\s*([0-9.]+)
    std: (?i)(Std Dev|SD):\s*([0-9.]+)
notes:
  user_notes: 'Before Mean: 4.186381063517183

    Before SD: 0.010137387372920439

    After Mean: 0.5890858478355221

    After SD: 0.002554914756392203

    Improvement: -85.93%'
  mike_notes: ''
meta:
  num_covering_tests: '29'
