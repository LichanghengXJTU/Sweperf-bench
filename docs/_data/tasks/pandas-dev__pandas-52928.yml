id: pandas-dev__pandas-52928
status:
  human: APPROVED
  llm: COMING_SOON
comparison:
  llm_better: COMING_SOON
repo:
  org: pandas-dev
  name: pandas
  url: https://github.com/pandas-dev/pandas
  pull_request: https://github.com/pandas-dev/pandas/pull/52928
  base_commit: d182a3495a95c7067c13690cfe037597c3714d5d
  created_at: '2023-04-26 11:13:35'
  version: '2'
workload:
  language: python
  code: "\nimport timeit\nimport statistics\n\nimport numpy as np\nimport pandas as\
    \ pd\nimport tempfile\nimport os\n\nn = 5000000\n\ns_samples = [f\"s_{i}\" for\
    \ i in range(1, 101)]\ni_samples = [f\"i_{i}\" for i in range(1, 201)]\nbool_samples\
    \ = [True, False]\n\nssamples = np.random.choice(s_samples, n)\nisamples = np.random.choice(i_samples,\
    \ n)\nd_values = np.random.randn(3, n)\nb_values = np.random.choice(bool_samples,\
    \ n)\n\ndf = pd.DataFrame(\n    dict(s=ssamples, i=isamples, v1=d_values[0], v2=d_values[1],\
    \ v3=d_values[2], f1=b_values, f2=b_values)\n)\n\ntemp_path = tempfile.NamedTemporaryFile(suffix=\"\
    .csv\", delete=False).name\n\ndf.to_csv(temp_path, index=None)\n\ndf_new = pd.read_csv(temp_path,\
    \ engine=\"pyarrow\", dtype_backend=\"pyarrow\")\narr = df_new[\"v1\"].array._pa_array\n\
    \ndef workload():\n    pd.Float64Dtype().__from_arrow__(arr)\n\nruntimes = timeit.repeat(workload,\
    \ number=5, repeat=25)\n\nos.remove(temp_path)\n\n# Print runtime mean and std\
    \ deviation.\nprint(\"Mean:\", statistics.mean(runtimes))\nprint(\"Std Dev:\"\
    , statistics.stdev(runtimes))\n"
docker:
  base_image: docker.io/sweperf/sweperf:pandas-dev__pandas-52928
  human_image: docker.io/sweperf/sweperf_annotate:pandas-dev__pandas-52928
  llm_image: PLACEHOLDER
  commands:
    run_base: docker run --rm --name bench_{id}_base --mount type=bind,src=<WORKLOAD_PY>,dst=/tmp/workload.py
      {base_image} /bin/bash -lc 'python /tmp/workload.py' 2>&1
    run_human: docker run --rm --platform linux/amd64 --name bench_{id}_human --mount
      type=bind,src=<WORKLOAD_PY>,dst=/tmp/workload.py {human_image} /bin/bash -lc
      'chmod +x /perf.sh && git apply /tmp/patch.diff && /perf.sh' 2>&1
    run_llm: echo 'LLM image not available yet for {id}. Please fill docker.llm_image.'
metrics:
  reducer: mean_std
  parse_regex:
    mean: (?i)\bMean:\s*([0-9.]+)
    std: (?i)(Std Dev|SD):\s*([0-9.]+)
notes:
  user_notes: 'Before Mean: 0.19809342723805456

    Before SD: 0.006601548507589056

    After Mean: 0.10658200856531039

    After SD: 0.0011800805842831588

    Improvement: -46.20%'
  mike_notes: ''
meta:
  num_covering_tests: '8'
