id: astropy__astropy-17032
status:
  human: APPROVED
  llm: COMING_SOON
comparison:
  llm_better: COMING_SOON
repo:
  org: astropy
  name: astropy
  url: https://github.com/astropy/astropy
  pull_request: https://github.com/astropy/astropy/pull/17032
  base_commit: 766c3c53899833652730f90c2b705cb420f371b0
  created_at: '2024-09-18 12:04:51'
  version: v5.3
workload:
  language: python
  code: "from astropy.modeling import models, fitting\nfrom astropy.modeling.fitting\
    \ import parallel_fit_dask\nimport numpy as np\nfrom astropy.utils import NumpyRNGContext\n\
    import timeit\nimport statistics\n\nN = 1000\nx = np.linspace(-5, 5, 100)\ny_true\
    \ = models.Gaussian1D(amplitude=2.5, mean=0.0, stddev=1.2)(x)\n\nys = []\nwith\
    \ NumpyRNGContext(42):\n    for _ in range(N):\n        noise = np.random.normal(0,\
    \ 0.1, size=x.size)\n        ys.append(y_true + noise)\n\ndata = np.stack(ys)\n\
    \ninit_model = models.Gaussian1D(amplitude=1.0, mean=0.0, stddev=1.0)\nfitter\
    \ = fitting.LevMarLSQFitter()\n\ndef setup():\n    pass\n\ndef workload():\n \
    \   fitted_model = parallel_fit_dask(\n        model=init_model,\n        fitter=fitter,\n\
    \        data=data,\n        fitting_axes=(1,),\n        scheduler=\"threads\"\
    ,\n    )\n\nruntimes = timeit.repeat(workload, number=1, repeat=20, setup=setup)\n\
    \nprint(\"Mean:\", statistics.mean(runtimes))\nprint(\"Std Dev:\", statistics.stdev(runtimes))"
docker:
  base_image: docker.io/sweperf/sweperf:astropy__astropy-17032
  human_image: docker.io/sweperf/sweperf_annotate:astropy__astropy-17032
  llm_image: PLACEHOLDER
  commands:
    run_base: docker run --rm --name bench_{id}_base --mount type=bind,src=<WORKLOAD_PY>,dst=/tmp/workload.py
      {base_image} /bin/bash -lc 'python /tmp/workload.py' 2>&1
    run_human: docker run --rm --name bench_{id}_human --mount type=bind,src=<WORKLOAD_PY>,dst=/tmp/workload.py
      {human_image} /bin/bash -lc 'chmod +x /perf.sh && /perf.sh && python /tmp/workload.py'
      2>&1
    run_llm: echo 'LLM image not available yet for {id}. Please fill docker.llm_image.'
metrics:
  reducer: mean_std
  parse_regex:
    mean: (?i)\bMean:\s*([0-9.]+)
    std: (?i)(Std Dev|SD):\s*([0-9.]+)
notes:
  user_notes: 'Before Mean: 1.5771934229967883

    Before SD: 0.06410829228592804

    After Mean: 1.4533495544543258

    After SD: 0.046250705164684575

    Improvement: -7.85%'
  mike_notes: ''
meta:
  num_covering_tests: '1'
