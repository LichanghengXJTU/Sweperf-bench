id: pandas-dev__pandas-43332
status:
  human: APPROVED
  llm: COMING_SOON
comparison:
  llm_better: COMING_SOON
repo:
  org: pandas-dev
  name: pandas
  url: https://github.com/pandas-dev/pandas
  pull_request: https://github.com/pandas-dev/pandas/pull/43332
  base_commit: a826be1f616bdca3a028085b3d6f9e54c1d959cf
  created_at: '2021-08-31 18:07:18'
  version: '1.3'
workload:
  language: python
  code: "import timeit\nimport statistics\n\nimport pandas as pd\nimport numpy as\
    \ np\n\ntry:\n    import pandas._testing as tm\nexcept ImportError:\n    import\
    \ pandas.util.testing as tm\n\nN = 10000\nindices = tm.makeStringIndex(N).values\n\
    indices2 = tm.makeStringIndex(N).values\nkey = np.tile(indices[:8000], 10)\nkey2\
    \ = np.tile(indices2[:8000], 10)\nleft = pd.DataFrame(\n    {\"key\": key, \"\
    key2\": key2, \"value\": np.random.randn(80000)}\n)\nright = pd.DataFrame(\n \
    \   {\n        \"key\": indices[2000:],\n        \"key2\": indices2[2000:],\n\
    \        \"value2\": np.random.randn(8000),\n    }\n)\n\ndf = pd.DataFrame(\n\
    \    {\n        \"key1\": np.tile(np.arange(500).repeat(10), 2),\n        \"key2\"\
    : np.tile(np.arange(250).repeat(10), 4),\n        \"value\": np.random.randn(10000),\n\
    \    }\n)\ndf2 = pd.DataFrame({\"key1\": np.arange(500), \"value2\": np.random.randn(500)})\n\
    df3 = df[:5000]\n\ndef workload():\n    pd.merge(left.loc[:2000], right.loc[:2000],\
    \ how=\"cross\", sort=False)\n    pd.merge(left.loc[:2000], right.loc[:2000],\
    \ how=\"cross\", sort=True)\n\nruntimes = timeit.repeat(workload, number=5, repeat=100)\n\
    \n# Print runtime mean and std deviation.\nprint(\"Mean:\", statistics.mean(runtimes))\n\
    print(\"Std Dev:\", statistics.stdev(runtimes))\n"
docker:
  base_image: docker.io/sweperf/sweperf:pandas-dev__pandas-43332
  human_image: docker.io/sweperf/sweperf_annotate:pandas-dev__pandas-43332
  llm_image: PLACEHOLDER
  commands:
    run_base: docker run --rm --name bench_{id}_base --mount type=bind,src=<WORKLOAD_PY>,dst=/tmp/workload.py
      {base_image} /bin/bash -lc 'python /tmp/workload.py' 2>&1
    run_human: docker run --rm --platform linux/amd64 --name bench_{id}_human --mount
      type=bind,src=<WORKLOAD_PY>,dst=/tmp/workload.py {human_image} /bin/bash -lc
      'chmod +x /perf.sh && git apply -q /tmp/patch.diff && /perf.sh' 2>&1
    run_llm: echo 'LLM image not available yet for {id}. Please fill docker.llm_image.'
metrics:
  reducer: mean_std
  parse_regex:
    mean: (?i)\bMean:\s*([0-9.]+)
    std: (?i)(Std Dev|SD):\s*([0-9.]+)
notes:
  user_notes: 'Before Mean: 5.6540344303316665

    Before SD: 0.0424491914910699

    After Mean: 2.0035718812572303

    After SD: 0.014920882140757154

    Improvement: -64.56%'
  mike_notes: ''
meta:
  num_covering_tests: '27'
