id: pandas-dev__pandas-41503
status:
  human: APPROVED
  llm: COMING_SOON
comparison:
  llm_better: COMING_SOON
repo:
  org: pandas-dev
  name: pandas
  url: https://github.com/pandas-dev/pandas
  pull_request: https://github.com/pandas-dev/pandas/pull/41503
  base_commit: f7dd14bd62e587b6846616844a79a159e0d7e61c
  created_at: '2021-05-16 12:02:14'
  version: '1.2'
workload:
  language: python
  code: "import timeit\nimport statistics\n\nimport importlib\nimport sys\nimport\
    \ pkg_resources\nfrom pandas.plotting._core import _get_plot_backend\n\ndist =\
    \ pkg_resources.get_distribution(\"pandas\")\nspec = importlib.machinery.ModuleSpec(\"\
    my_backend\", None)\nmod = importlib.util.module_from_spec(spec)\nmod.plot = lambda\
    \ *args, **kwargs: 1\n\nbackends = pkg_resources.get_entry_map(\"pandas\")\nmy_entrypoint\
    \ = pkg_resources.EntryPoint(\n    \"pandas_plotting_backend\", mod.__name__,\
    \ dist=dist\n)\nbackends[\"pandas_plotting_backends\"][mod.__name__] = my_entrypoint\n\
    for i in range(1000):\n    backends[\"pandas_plotting_backends\"][str(i)] = my_entrypoint\n\
    sys.modules[\"my_backend\"] = mod \n\ndef workload():\n    _get_plot_backend(\"\
    my_backend\")\n    \nruntimes = timeit.repeat(workload, number=5, repeat=10**6)\n\
    \n# Print runtime mean and std deviation.\nprint(\"Mean:\", statistics.mean(runtimes))\n\
    print(\"Std Dev:\", statistics.stdev(runtimes))\n"
docker:
  base_image: docker.io/sweperf/sweperf:pandas-dev__pandas-41503
  human_image: docker.io/sweperf/sweperf_annotate:pandas-dev__pandas-41503
  llm_image: PLACEHOLDER
  commands:
    run_base: docker run --rm --name bench_{id}_base --mount type=bind,src=<WORKLOAD_PY>,dst=/tmp/workload.py
      {base_image} /bin/bash -lc 'python /tmp/workload.py' 2>&1
    run_human: docker run --rm --platform linux/amd64 --name bench_{id}_human --mount
      type=bind,src=<WORKLOAD_PY>,dst=/tmp/workload.py {human_image} /bin/bash -lc
      'chmod +x /perf.sh && git apply /tmp/patch.diff && /perf.sh' 2>&1
    run_llm: echo 'LLM image not available yet for {id}. Please fill docker.llm_image.'
metrics:
  reducer: mean_std
  parse_regex:
    mean: (?i)\bMean:\s*([0-9.]+)
    std: (?i)(Std Dev|SD):\s*([0-9.]+)
notes:
  user_notes: 'Before Mean: 9.82224780949764e-07

    Before SD: 0.00018134952851918282

    After Mean: 7.013671623426489e-07

    After SD: 5.291984738892682e-06

    Improvement: -28.59%'
  mike_notes: ''
meta:
  num_covering_tests: '850'
