id: scipy__scipy-19583
status:
  human: APPROVED
  llm: COMING_SOON
comparison:
  llm_better: COMING_SOON
repo:
  org: scipy
  name: scipy
  url: https://github.com/scipy/scipy
  pull_request: https://github.com/scipy/scipy/pull/19583
  base_commit: ae9dc13161cb227d7651c58dc47971193510221d
  created_at: '2023-11-24 2:38:20'
  version: '1.11'
workload:
  language: python
  code: "import timeit\nimport statistics\nimport numpy as np\nimport scipy.spatial\n\
    \ndef setup():\n    global x, y, w\n    x = np.random.normal(size=512)\n    y\
    \ = np.random.normal(size=512)\n    w = np.random.uniform(size=512)\n    \ndef\
    \ workload():\n    global x, y, w\n    scipy.spatial.distance.cosine(x, y)\n \
    \   scipy.spatial.distance.cosine(x, y, w)\n    scipy.spatial.distance.correlation(x,\
    \ y)\n    scipy.spatial.distance.correlation(x, y, w)\n    \nruntimes = timeit.repeat(workload,\
    \ number=1, repeat=2000, setup=setup)\n\nprint(\"Mean:\", statistics.mean(runtimes[-1000:]))\n\
    print(\"Std Dev:\", statistics.stdev(runtimes[-1000:]))"
docker:
  base_image: docker.io/sweperf/sweperf:scipy__scipy-19583
  human_image: docker.io/sweperf/sweperf_annotate:scipy__scipy-19583
  llm_image: PLACEHOLDER
  commands:
    run_base: docker run --rm --name bench_{id}_base --mount type=bind,src=<WORKLOAD_PY>,dst=/tmp/workload.py
      {base_image} /bin/bash -lc 'python /tmp/workload.py' 2>&1
    run_human: docker run --rm --platform linux/amd64 --name bench_{id}_human --mount
      type=bind,src=<WORKLOAD_PY>,dst=/tmp/workload.py {human_image} /bin/bash -lc
      'chmod +x /perf.sh && git apply /tmp/patch.diff && /perf.sh' 2>&1
    run_llm: echo 'LLM image not available yet for {id}. Please fill docker.llm_image.'
metrics:
  reducer: mean_std
  parse_regex:
    mean: (?i)\bMean:\s*([0-9.]+)
    std: (?i)(Std Dev|SD):\s*([0-9.]+)
notes:
  user_notes: 'Before Mean: 0.00013726252148626373

    Before SD: 2.9992692827839912e-06

    After Mean: 4.256376082776114e-05

    After SD: 1.5921384888309588e-06

    Improvement: -68.99%'
  mike_notes: ''
meta:
  num_covering_tests: '1'
