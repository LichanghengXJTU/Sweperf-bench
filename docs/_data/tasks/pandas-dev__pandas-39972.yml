id: pandas-dev__pandas-39972
status:
  human: APPROVED
  llm: COMING_SOON
comparison:
  llm_better: COMING_SOON
repo:
  org: pandas-dev
  name: pandas
  url: https://github.com/pandas-dev/pandas
  pull_request: https://github.com/pandas-dev/pandas/pull/39972
  base_commit: dfb92d0f1bca79185128538698fbc660077eccfd
  created_at: '2021-02-22 17:12:44'
  version: '1.2'
workload:
  language: python
  code: "import itertools\nimport timeit\nimport statistics\n\nimport pandas as pd\n\
    import numpy as np\n\nparams = [[12, 24, 36], [12, 120]]\n\ndataframes = []\n\
    st = []\n\ndef _apply_func(s):\n    return [\n        \"background-color: lightcyan\"\
    \ if s.name == \"row_1\" else \"\" for v in s\n    ]\n\nfor cols, rows in itertools.product(*params):\n\
    \    df = pd.DataFrame(\n            np.random.randn(rows, cols),\n          \
    \  columns=[f\"float_{i+1}\" for i in range(cols)],\n            index=[f\"row_{i+1}\"\
    \ for i in range(rows)],\n        )\n    st.append(\n        df.style.apply(_apply_func,\
    \ axis=1)\n    )\n    \ndef workload():\n    for elem in st:\n        elem.render()\n\
    \n\nruntimes = timeit.repeat(workload, number=1, repeat=100)\n\n# Print runtime\
    \ mean and std deviation.\nprint(\"Mean:\", statistics.mean(runtimes))\nprint(\"\
    Std Dev:\", statistics.stdev(runtimes))\n"
docker:
  base_image: docker.io/sweperf/sweperf:pandas-dev__pandas-39972
  human_image: docker.io/sweperf/sweperf_annotate:pandas-dev__pandas-39972
  llm_image: PLACEHOLDER
  commands:
    run_base: docker run --rm --name bench_{id}_base --mount type=bind,src=<WORKLOAD_PY>,dst=/tmp/workload.py
      {base_image} /bin/bash -lc 'python /tmp/workload.py' 2>&1
    run_human: docker run --rm --platform linux/amd64 --name bench_{id}_human --mount
      type=bind,src=<WORKLOAD_PY>,dst=/tmp/workload.py {human_image} /bin/bash -lc
      'chmod +x /perf.sh && git apply /tmp/patch.diff && /perf.sh' 2>&1
    run_llm: echo 'LLM image not available yet for {id}. Please fill docker.llm_image.'
metrics:
  reducer: mean_std
  parse_regex:
    mean: (?i)\bMean:\s*([0-9.]+)
    std: (?i)(Std Dev|SD):\s*([0-9.]+)
notes:
  user_notes: 'Before Mean: 0.2103382483002497

    Before SD: 0.0031867796117883308

    After Mean: 0.07579733145877253

    After SD: 0.003025022888560687

    Improvement: -63.96%'
  mike_notes: ''
meta:
  num_covering_tests: '1'
