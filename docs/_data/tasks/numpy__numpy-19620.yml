id: numpy__numpy-19620
status:
  human: APPROVED
  llm: COMING_SOON
comparison:
  llm_better: COMING_SOON
repo:
  org: numpy
  name: numpy
  url: https://github.com/numpy/numpy
  pull_request: https://github.com/numpy/numpy/pull/19620
  base_commit: 99eac42354f9c900bf8897abec6e7c1bd6c9ff6c
  created_at: '2021-08-05 22:25:06'
  version: '1.21'
workload:
  language: python
  code: "import timeit\nimport statistics\n\nimport numpy as np\nfrom io import StringIO\n\
    \n\nnum_lines_dtypes = int(1e5)\ndata = ['5, 7, 888'] * num_lines_dtypes\ncsv_data_dtypes\
    \ = StringIO('\\n'.join(data))\n\ndates = np.arange('2020-01-01', '2020-01-21',\
    \ dtype='datetime64[D]')\nnp.random.seed(123)\nvalues = np.random.rand(20)\ndate_line\
    \ = ''.join(f\"{str(date)},{value}\\n\" for date, value in zip(dates, values))\n\
    data = date_line * (20000 // 20)\ncsv_data_datetime = StringIO(data)\n\n\ndef\
    \ workload():\n    for dtype in ['float32', 'float64', 'int32', 'int64', 'complex128',\
    \ 'str', 'object']:\n        np.loadtxt(csv_data_dtypes, delimiter=',', dtype=dtype)\n\
    \        csv_data_dtypes.seek(0)\n\n    np.loadtxt(csv_data_datetime,\n      \
    \         delimiter=',',\n               dtype=[('dates', 'M8[us]'), ('values',\
    \ 'float64')])\n    csv_data_datetime.seek(0)\n\n\nruntimes = timeit.repeat(workload,\
    \ number=1, repeat=25)\n\nprint(\"Mean:\", statistics.mean(runtimes))\nprint(\"\
    Std Dev:\", statistics.stdev(runtimes))\n"
docker:
  base_image: docker.io/sweperf/sweperf:numpy__numpy-19620
  human_image: docker.io/sweperf/sweperf_annotate:numpy__numpy-19620
  llm_image: PLACEHOLDER
  commands:
    run_base: docker run --rm --name bench_{id}_base --mount type=bind,src=<WORKLOAD_PY>,dst=/tmp/workload.py
      {base_image} /bin/bash -lc 'python /tmp/workload.py' 2>&1
    run_human: docker run --rm --name bench_{id}_human --mount type=bind,src=<WORKLOAD_PY>,dst=/tmp/workload.py
      {human_image} /bin/bash -lc 'chmod +x /perf.sh && /perf.sh && python /tmp/workload.py'
      2>&1
    run_llm: echo 'LLM image not available yet for {id}. Please fill docker.llm_image.'
metrics:
  reducer: mean_std
  parse_regex:
    mean: (?i)\bMean:\s*([0-9.]+)
    std: (?i)(Std Dev|SD):\s*([0-9.]+)
notes:
  user_notes: 'Before Mean: 6.2473106411099435

    Before SD: 0.10734410850231425

    After Mean: 5.768966328608803

    After SD: 0.0662209008939733

    Improvement: -7.66%'
  mike_notes: ''
meta:
  num_covering_tests: '179'
