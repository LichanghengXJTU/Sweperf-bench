id: pandas-dev__pandas-43059
status:
  human: APPROVED
  llm: COMING_SOON
comparison:
  llm_better: COMING_SOON
repo:
  org: pandas-dev
  name: pandas
  url: https://github.com/pandas-dev/pandas
  pull_request: https://github.com/pandas-dev/pandas/pull/43059
  base_commit: e7d9057f2bd2757219b1cb21f5380b15e7a0f018
  created_at: '2021-08-15 19:42:59'
  version: '1.3'
workload:
  language: python
  code: "\nimport timeit\nimport statistics\n\nimport pandas as pd\nimport numpy as\
    \ np\nimport tempfile\nimport os\n\ntry:\n    import pandas._testing as tm\nexcept\
    \ ImportError:\n    import pandas.util.testing as tm\n\n\nN = 100_000\nC = 5\n\
    \ntemp_path = tempfile.NamedTemporaryFile(suffix=\".dta\", delete=False).name\n\
    \n\ndf = pd.DataFrame(\n    np.random.randn(N, C),\n    columns=[f\"float{i}\"\
    \ for i in range(C)],\n    index=pd.date_range(\"20000101\", periods=N, freq=\"\
    H\"),\n)\ndf[\"object\"] = tm.makeStringIndex(N)\ndf[\"int8_\"] = np.random.randint(np.iinfo(np.int8).min,\
    \ np.iinfo(np.int8).max - 27, N)\ndf[\"int16_\"] = np.random.randint(np.iinfo(np.int16).min,\
    \ np.iinfo(np.int16).max - 27, N)\ndf[\"int32_\"] = np.random.randint(np.iinfo(np.int32).min,\
    \ np.iinfo(np.int32).max - 27, N)\ndf[\"float32_\"] = np.array(np.random.randn(N),\
    \ dtype=np.float32)\n\nfor i in range(10):\n    missing_data = np.random.randn(N)\n\
    \    missing_data[missing_data < 0] = np.nan\n    df[f\"missing_{i}\"] = missing_data\n\
    \nconvert_dates_arg = {\"index\": \"tc\"}\ndf.to_stata(temp_path, convert_dates=convert_dates_arg)\n\
    \n\ndef workload():\n    pd.read_stata(temp_path)\n\n\nruntimes = timeit.repeat(workload,\
    \ number=5, repeat=25)\n\nos.remove(temp_path)\n\n# Print runtime mean and std\
    \ deviation.\nprint(\"Mean:\", statistics.mean(runtimes))\nprint(\"Std Dev:\"\
    , statistics.stdev(runtimes))\n"
docker:
  base_image: docker.io/sweperf/sweperf:pandas-dev__pandas-43059
  human_image: docker.io/sweperf/sweperf_annotate:pandas-dev__pandas-43059
  llm_image: PLACEHOLDER
  commands:
    run_base: docker run --rm --name bench_{id}_base --mount type=bind,src=<WORKLOAD_PY>,dst=/tmp/workload.py
      {base_image} /bin/bash -lc 'python /tmp/workload.py' 2>&1
    run_human: docker run --rm --platform linux/amd64 --name bench_{id}_human --mount
      type=bind,src=<WORKLOAD_PY>,dst=/tmp/workload.py {human_image} /bin/bash -lc
      'chmod +x /perf.sh && git apply -q /tmp/patch.diff && /perf.sh' 2>&1
    run_llm: echo 'LLM image not available yet for {id}. Please fill docker.llm_image.'
metrics:
  reducer: mean_std
  parse_regex:
    mean: (?i)\bMean:\s*([0-9.]+)
    std: (?i)(Std Dev|SD):\s*([0-9.]+)
notes:
  user_notes: 'Before Mean: 0.564224630240351

    Before SD: 0.012535148059919106

    After Mean: 0.4129073414299637

    After SD: 0.010098808112779077

    Improvement: -26.82%'
  mike_notes: ''
meta:
  num_covering_tests: '4'
