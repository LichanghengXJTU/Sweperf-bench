id: pandas-dev__pandas-43073
status:
  human: APPROVED
  llm: COMING_SOON
comparison:
  llm_better: COMING_SOON
repo:
  org: pandas-dev
  name: pandas
  url: https://github.com/pandas-dev/pandas
  pull_request: https://github.com/pandas-dev/pandas/pull/43073
  base_commit: bc16631b0580902315c4c08926e739b86c6c65ab
  created_at: '2021-08-17 1:18:07'
  version: '1.3'
workload:
  language: python
  code: "import timeit\nimport statistics\n\nimport pandas as pd\nimport numpy as\
    \ np\n\ndfs = []\n\nfor factor in [4, 5]:\n    N = 10 ** factor\n    labels =\
    \ np.random.randint(0, 2000 if factor == 4 else 20, size=N)\n    labels2 = np.random.randint(0,\
    \ 3, size=N)\n    df = pd.DataFrame(\n        {\n            \"key\": labels,\n\
    \            \"key2\": labels2,\n            \"value1\": np.random.randn(N),\n\
    \            \"value2\": [\"foo\", \"bar\", \"baz\", \"qux\"] * (N // 4),\n  \
    \      }\n    )\n    dfs.append(df)\n\ndef df_copy_function(g):\n    g.name\n\
    \    return g.copy()\n\ndef workload():\n    for df in dfs:\n        df.groupby(\"\
    key\").apply(df_copy_function)\n\nruntimes = timeit.repeat(workload, number=1,\
    \ repeat=100)\n\n# Print runtime mean and std deviation.\nprint(\"Mean:\", statistics.mean(runtimes))\n\
    print(\"Std Dev:\", statistics.stdev(runtimes))"
docker:
  base_image: docker.io/sweperf/sweperf:pandas-dev__pandas-43073
  human_image: docker.io/sweperf/sweperf_annotate:pandas-dev__pandas-43073
  llm_image: PLACEHOLDER
  commands:
    run_base: docker run --rm --name bench_{id}_base --mount type=bind,src=<WORKLOAD_PY>,dst=/tmp/workload.py
      {base_image} /bin/bash -lc 'python /tmp/workload.py' 2>&1
    run_human: docker run --rm --platform linux/amd64 --name bench_{id}_human --mount
      type=bind,src=<WORKLOAD_PY>,dst=/tmp/workload.py {human_image} /bin/bash -lc
      'chmod +x /perf.sh && git apply /tmp/patch.diff && /perf.sh' 2>&1
    run_llm: echo 'LLM image not available yet for {id}. Please fill docker.llm_image.'
metrics:
  reducer: mean_std
  parse_regex:
    mean: (?i)\bMean:\s*([0-9.]+)
    std: (?i)(Std Dev|SD):\s*([0-9.]+)
notes:
  user_notes: 'Before Mean: 0.19746765658201185

    Before SD: 0.0026022609502794917

    After Mean: 0.17925381435721646

    After SD: 0.0022737850022533676

    Improvement: -9.22%'
  mike_notes: ''
meta:
  num_covering_tests: '860'
