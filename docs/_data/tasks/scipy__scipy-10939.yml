id: scipy__scipy-10939
status:
  human: APPROVED
  llm: COMING_SOON
comparison:
  llm_better: COMING_SOON
repo:
  org: scipy
  name: scipy
  url: https://github.com/scipy/scipy
  pull_request: https://github.com/scipy/scipy/pull/10939
  base_commit: 5f7733316df2c4a0cad5b735f4773d4bb8d900f7
  created_at: '2019-10-17 19:37:29'
  version: '1.3'
workload:
  language: python
  code: "import timeit\nimport statistics\n\nimport scipy\nfrom numpy import ones,\
    \ array, asarray, empty, random\nfrom scipy.sparse import dia_matrix\n\ndef poisson2d(N,\
    \ dtype='d', format=None):\n    if N == 1:\n        diags = asarray([[4]], dtype=dtype)\n\
    \        return dia_matrix((diags, [0]), shape=(1, 1)).asformat(format)\n\n  \
    \  offsets = array([0, -N, N, -1, 1])\n\n    diags = empty((5, N**2), dtype=dtype)\n\
    \n    diags[0] = 4  \n    diags[1:] = -1  \n\n    diags[3, N-1::N] = 0  \n   \
    \ diags[4, N::N] = 0  \n\n    return dia_matrix((diags, offsets), shape=(N**2,\
    \ N**2)).asformat(format)\n\nbase_format = \"lil\"\nbase = poisson2d(100, format=base_format)\n\
    to_formats = [\"dok\", \"dia\", \"csr\", \"bsr\", \"coo\"]\nconversion_lambdas\
    \ = [\n    getattr(base, 'to' + to_format) for to_format in to_formats\n]\n\n\
    def workload():\n    for convert in conversion_lambdas:\n        _ = convert()\n\
    \nruntimes = timeit.repeat(workload, number=1, repeat=1000)\n\nprint(\"Mean:\"\
    , statistics.mean(runtimes))\nprint(\"Std Dev:\", statistics.stdev(runtimes))"
docker:
  base_image: docker.io/sweperf/sweperf:scipy__scipy-10939
  human_image: docker.io/sweperf/sweperf_annotate:scipy__scipy-10939
  llm_image: PLACEHOLDER
  commands:
    run_base: docker run --rm --name bench_{id}_base --mount type=bind,src=<WORKLOAD_PY>,dst=/tmp/workload.py
      {base_image} /bin/bash -lc 'python /tmp/workload.py' 2>&1
    run_human: docker run --rm --name bench_{id}_human --mount type=bind,src=<WORKLOAD_PY>,dst=/tmp/workload.py
      {human_image} /bin/bash -lc 'chmod +x /perf.sh && /perf.sh && python /tmp/workload.py'
      2>&1
    run_llm: echo 'LLM image not available yet for {id}. Please fill docker.llm_image.'
metrics:
  reducer: mean_std
  parse_regex:
    mean: (?i)\bMean:\s*([0-9.]+)
    std: (?i)(Std Dev|SD):\s*([0-9.]+)
notes:
  user_notes: 'Before Mean: 0.10567825335811358

    Before SD: 0.0005741140138510774

    After Mean: 0.047167232048872396

    After SD: 0.0006125318438943478

    Improvement: -55.37%'
  mike_notes: ''
meta:
  num_covering_tests: '1'
